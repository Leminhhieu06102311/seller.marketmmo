"use client";

import { createPromotion } from "@/services/promotion";
import Image from "next/image";
import { useRouter } from "next/navigation";
import { useEffect, useState } from "react";
import { AiOutlineEye } from "react-icons/ai";
import { toast } from "react-toastify";
import ListProd from "./listPrd";
import { showModal } from "@/redux/modalSlice";
import { ENUM_NAME_MODAL } from "@/enum/name_modal";
import { useAppDispatch, useAppSelector } from "@/redux/hooks";
import Cookies from 'js-cookie'
import { useParams } from 'next/navigation'


export default function createDiscount() {
  const router = useRouter()
  const params = useParams()
  const dispatch = useAppDispatch()
  const token = Cookies.get('token')
  const code = params.create as string

  const [promotionType, setPromotionType] = useState('');
  const [startDate, setStartDate] = useState(new Date())
  const [endDate, setEndDate] = useState(new Date())
  const [minAmout, setMinAmount] = useState('');
  const [listPrd, setListPrd] = useState<{ id: string; name: string }[]>([]);
  const [discount, setDiscount] = useState('');

  useEffect(() => {
    if (code === '655caa32d7b31be96da71a26') {
      setPromotionType('discount-product');
    } else if (code === '655caa6fd7b31be96da71a28') {
      setPromotionType('preferential-price');
    } else if (code === '655caa88d7b31be96da71a29') {
      setPromotionType('gift');
    } else {
      router.push('/seller/promotion');
    }
  }, [code]);

  // const handleChangeDiscountType = (section: string) => {
  //   setDiscountType(section)
  // }

  const handleStartDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const newStartDate = new Date(e.target.value);
    setStartDate(newStartDate);
  };

  const handleEndDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const newEndDate = new Date(e.target.value);
    setEndDate(newEndDate);
  };

  const handleCancel = () => {
    router.push('/seller/promotion')
  }

  const handleProductIdsChange = (newSelectedProducts: { id: string; name: string }[]) => {
    setListPrd(newSelectedProducts);
  };

  const handleShowListPrd = () => {
    dispatch(showModal(ENUM_NAME_MODAL.LISTPRODUCT_MODAL))
  }

  const handleSubmitPromotion = () => {
    if (!startDate || !endDate || startDate > endDate) {
      toast.warn('Ng√†y v√† gi·ªù c·ªßa ng√†y b·∫Øt ƒë·∫ßu ph·∫£i nh·ªè h∆°n ng√†y k·∫øt th√∫c')
      return;
    }
    let defaultData = {};
    setDiscount('')
    setMinAmount('')
    setListPrd([])
    if (promotionType === 'discount-product') {
      const cutPrice = Number(discount);
      if (isNaN(cutPrice) || cutPrice == null || cutPrice == 0) {
        toast.warn("S·ªë ti·ªÅn gi·∫£m kh√¥ng h·ª£p l·ªá");
        return;
      }
      if (listPrd.length === 0) {
        toast.warn("Vui l√≤ng ch·ªçn s·∫£n ph·∫©m ƒë∆∞·ª£c khuy·∫øn m√£i")
        return;
      }
      const idArray = listPrd.map(product => product.id)
      defaultData = {
        start_date: startDate,
        end_date: endDate,
        discount: cutPrice,
        items: idArray,
      };
    } else if (promotionType === 'preferential-price') {
      const amount = Number(minAmout);
      if (isNaN(amount) || amount == 0 || amount == null) {
        toast.warn('S·ªë l∆∞·ª£ng mua t·ªëi thi·ªÉu kh√¥ng h·ª£p l·ªá');
        return;
      }
      const cutPrice = Number(discount);
      setDiscount('')
      if (isNaN(cutPrice) || cutPrice == null || cutPrice == 0) {
        toast.warn("S·ªë ti·ªÅn gi·∫£m kh√¥ng h·ª£p l·ªá");
        return;
      }
      defaultData = {
        start_date: startDate,
        end_date: endDate,
        min_purchase_amount: amount,
        discount: cutPrice,
      };
    } else if (promotionType === 'gift') {
      if (listPrd.length === 0) {
        toast.warn("Vui l√≤ng ch·ªçn s·∫£n ph·∫©m ƒë∆∞·ª£c khuy·∫øn m√£i")
        return;
      }
      const idArray = listPrd.map(product => product.id)
      defaultData = {
        start_date: startDate,
        end_date: endDate,
        product_id: idArray,
      };
    }
    const requestData = { ...defaultData, defaultData };

    toast.promise(createPromotion(promotionType, requestData, token), {
      pending: {
        render() {
          return "ƒêang t·∫°o m√£ khuy·∫øn m√£i, vui l√≤ng ƒë·ª£i!"
        },
      },
      success: {
        async render({ data }) {
          return "T·∫°o m√£ khuy·∫øn m√£i th√†nh c√¥ng"
        },
        // other options
        icon: "üü¢",
      },
      error: {
        render: ({ data }) => {
          console.log(data)
          const error: any = data
          if (error.response && error.response.status === 401) {
            // L·ªói 401 c√≥ nghƒ©a l√† "Sai t√†i kho·∫£n ho·∫∑c m·∫≠t kh·∫©u"
            console.log(error);
          } else {
            console.error("L·ªói:", error);
          }
          return <div>L·ªói, xin vui l√≤ng th·ª≠ l·∫°i. {error.response.data.message}</div>
        }
      }
    })
  }

  return (
    <>
      <div className="bg-white w-full rounded-lg px-6 py-2">
        <div className="py-3 flex gap-2 items-center">
          <h1 className="font-medium text-2xl">Th√¥ng tin c∆° b·∫£n</h1>
        </div>
        <div className="flex gap-2 justify-between">
          <div className="flex flex-col gap-2 flex-1 w-1/2">
            <div className="flex gap-2 flex-col">
              <h3 className="text-lg font-medium">Th·ªùi gian khuy·∫øn m√£i</h3>
              <div className="flex gap-2">
                <input
                  type="datetime-local"
                  className="py-2 px-3 border border-gray-200 rounded-md w-full outline-none"
                  value={startDate.toISOString().slice(0, 16)}
                  onChange={handleStartDateChange}
                  onInput={(e) => e.preventDefault()}
                />
                <input
                  type="datetime-local"
                  className="py-2 px-3 border border-gray-200 rounded-md w-full outline-none"
                  value={endDate.toISOString().slice(0, 16)}
                  onChange={handleEndDateChange}
                  onInput={(e) => e.preventDefault()}
                />
              </div>
            </div>

            {(promotionType == "preferential-price") && (<div className="flex gap-2 flex-col">
              <h3 className="text-lg font-medium">S·ªë l∆∞·ª£ng s·∫£n ph·∫©m mua t·ªëi thi·ªÉu</h3>
              <div className="flex gap-2">
                <input
                  type="text"
                  min={0}
                  placeholder="50"
                  value={minAmout}
                  onChange={(e) => { setMinAmount(e.target.value) }}
                  className="py-2 px-3 border border-gray-200 rounded-md w-full outline-none"
                />
              </div>

            </div>)}
            {(promotionType === 'discount-product' || promotionType === 'preferential-price') && (
              <div className="flex gap-2 flex-col">
                <h3 className="text-lg font-medium">Gi·∫£m gi√°</h3>
                <div className="flex gap-2">
                  <input
                    type="text"
                    min={0}
                    placeholder="50000"
                    value={discount}
                    onChange={(e) => setDiscount(e.target.value)}
                    className="py-2 px-3 border border-gray-200 rounded-md w-full outline-none"
                  />
                </div>
              </div>
            )}

            {/* <div className="flex gap-2 flex-col"> */}
            {/* <h3 className="text-lg font-medium">Lo·∫°i chi·∫øt kh·∫•u</h3> */}
            {/* <div className="flex gap-2">
                <input type="radio" className="" />
                <label htmlFor="" className="text-base">
                  Gi·∫£m gi√° ph·∫ßn trƒÉm
                </label>
              </div> */}
            {/* <div className="flex gap-2">
                <input type="radio" className="" onChange={() => handleChangeDiscountType('fixedPrice')} checked={discountType === 'fixedPrice'} />
                <label htmlFor="" className="text-base">
                  Gi√° c·ªë ƒë·ªãnh
                </label>
              </div> */}
            {/* </div> */}
            {(promotionType == 'discount-product' || promotionType == 'gift') && (
              <><div className="py-3 flex gap-2 flex-col">
                <h1 className="font-medium text-2xl">S·∫£n ph·∫©m</h1>
                <p className="text-xs text-gray-700">
                  Ch·ªçn s·∫£n ph·∫©m ho·∫∑c SKU b·∫°n mu·ªën khuy·∫øn m√£i
                </p>
              </div><button className="px-3 py-2 bg-gray-100 text-black rounded-md inline-block" onClick={handleShowListPrd}>
                  Ch·ªçn s·∫£n ph·∫©m
                </button><div>
                  <ul>
                    {(listPrd && listPrd.length > 0) && (<h3>C√°c s·∫£n ph·∫©m ƒë√£ ch·ªçn</h3>)}
                    {listPrd.map((item) => (
                      <li>{item.name}</li>
                    ))}
                  </ul>
                </div></>
            )}
          </div>
          <div className="flex gap-4 w-1/2 justify-center">
            <div className="relative group">
              <div className="absolute top-0 right-0 bottom-0 left-0 bg-overlay rounded-lg group-hover:flex cursor-pointer items-center justify-center hidden">
                <AiOutlineEye className="text-white w-5 h-5" />
              </div>
              <Image
                className="rounded-lg"
                src="https://firebasestorage.googleapis.com/v0/b/marketmmo.appspot.com/o/seller%2Fdiscount%2Flive-stream.3c747bf8.png?alt=media&token=9f39cf6c-ae56-43de-a5c6-7a1d89b76cd2&_gl=1*11nuhsp*_ga*NTAzMzEwNjUwLjE2OTg5MTI2OTU.*_ga_CW55HF8NVT*MTY5OTAxOTc3Mi41LjEuMTY5OTAyMTEzNy42MC4wLjA."
                width={250}
                height={250}
                alt=""
              />
            </div>
            <div className="relative group">
              <div className="absolute top-0 right-0 bottom-0 left-0 bg-overlay rounded-lg group-hover:flex cursor-pointer items-center justify-center hidden">
                <AiOutlineEye className="text-white w-5 h-5" />
              </div>
              <Image
                className="rounded-lg"
                src="https://firebasestorage.googleapis.com/v0/b/marketmmo.appspot.com/o/seller%2Fdiscount%2Fpdp.b940b71e.png?alt=media&token=86179fd3-8e90-4a83-9bc4-47173eb37530&_gl=1*23pd6b*_ga*NTAzMzEwNjUwLjE2OTg5MTI2OTU.*_ga_CW55HF8NVT*MTY5OTAxOTc3Mi41LjEuMTY5OTAxOTg2MC4zNy4wLjA."
                width={250}
                height={250}
                alt=""
              />
            </div>
          </div>
        </div>
        <div className="bg-gray-100 rounded-lg w-full mt-10 mb-4 py-4 px-8">
          <h4 className="font-semibold my-4">Y√™u c·∫ßu v·ªÅ chi·∫øt kh·∫•u s·∫£n ph·∫©m</h4>
          <div className="flex">
            <div className="w-1/2">
              <h5 className="font-medium">
                Chi·∫øt kh·∫•u cao nh·∫•t s·∫Ω c√≥ hi·ªáu l·ª±c
              </h5>
              <p className="text-sm text-gray-700">
                M·ªôt s·∫£n ph·∫©m c√≥ th·ªÉ ƒë∆∞·ª£c ƒë∆∞a v√†o nhi·ªÅu ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i
                chi·∫øt kh·∫•u, nh∆∞ng ch·ªâ m·ª©c chi·∫øt kh·∫•u cao nh·∫•t m·ªõi c√≥ hi·ªáu l·ª±c
                t·∫°i m·ªôt th·ªùi ƒëi·ªÉm c·ª• th·ªÉ.
              </p>
            </div>
            <div className="w-1/2">
              <h5 className="font-medium">
                Gi√° chi·∫øn d·ªãch v√† gi√° ∆∞u ƒë√£i ch·ªõp nho√°ng s·∫Ω ƒë∆∞·ª£c ∆∞u ti√™n √°p d·ª•ng

              </h5>
              <p className="text-sm text-gray-700">
                ch·ªâ m·ª©c chi·∫øt kh·∫•u cao nh·∫•t m·ªõi c√≥ hi·ªáu l·ª±c t·∫°i m·ªôt th·ªùi ƒëi·ªÉm c·ª• th·ªÉ.
                Gi√° chi·∫øn d·ªãch v√† gi√° ∆∞u ƒë√£i ch·ªõp nho√°ng s·∫Ω ƒë∆∞·ª£c ∆∞u ti√™n √°p d·ª•ng
                Khi m·ªôt s·∫£n ph·∫©m c√≥ c·∫£ chi·∫øt kh·∫•u s·∫£n ph·∫©m v√† chi·∫øt kh·∫•u ∆∞u ƒë√£i ch·ªõp nho√°ng, ch·ªâ gi√° ∆∞u ƒë√£i ch·ªõp nho√°ng m·ªõi ƒë∆∞·ª£c hi·ªÉn th·ªã. T∆∞∆°ng t·ª±, khi m·ªôt s·∫£n ph·∫©m c√≥ c·∫£ khuy·∫øn m√£i chi·∫øt kh·∫•u v√† ƒë∆∞·ª£c ch·∫•p thu·∫≠n l√† m·ªôt ph·∫ßn trong chi·∫øn d·ªãch c·ªßa TikTok Shop, gi√° chi·∫øn d·ªãch s·∫Ω ƒë∆∞·ª£c ∆∞u ti√™n √°p d·ª•ng.
              </p>
            </div>
          </div>
        </div>
      </div >
      <div className="flex items-center justify-evenly mb-10">
        <p className="text-gray-700">B·∫±ng vi·ªác nh·∫•p v√†o "ƒê·ªìng √Ω & ƒëƒÉng", b·∫°n ƒë·ªìng √Ω  <span className="text-primary">ƒêi·ªÅu kho·∫£n & ƒëi·ªÅu ki·ªán c·ªßa C√¥ng c·ª• qu·∫£ng b√° cho ng∆∞·ªùi b√°n c·ªßa MarketMMO</span></p>
        <div className="flex gap-2 justify-end">
          <button className="text-black bg-gray-100 px-3 py-2 rounded-md text-sm font-semibold" onClick={handleCancel}>
            H·ªßy
          </button>
          <button className="text-white bg-primary px-3 py-2 rounded-md text-sm font-semibold" type="submit" onClick={handleSubmitPromotion}>
            ƒê·ªìng √Ω v√† ƒëƒÉng
          </button>
        </div>
      </div>
      <ListProd onProductIdsChange={handleProductIdsChange} />
    </>
  );
}